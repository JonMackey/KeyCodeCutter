// Subset font representing icons used in the project.
// The icons correspond to characters starting with the glyph 'A'.
// A = first icon, B = second, etc.

#ifndef KM_Icons_h
#define KM_Icons_h

#include "XFontGlyph.h"
#include "XFont16BitDataStream.h"

namespace KM_Icons
{
	const FontHeader	fontHeader PROGMEM =
	{
		1,		// version, currently version = 1
		0,		// oneBit, 1 = 1 bit per pixel, 0 = 8 bit (antialiased)
		0,		// rotated, glyph data is rotated (applies to 1 bit only)
		0,		// wideOffsets, 1 = 32 bit, 0 = 16 bit glyph data offsets
		0,		// monospaced, fixed width font (for this subset)
		32,		// ascent, font in pixels
		0,		// descent, font in pixels
		32,		// height, font height (ascent+descent+leading) in pixels
		32,		// width, widest glyph advanceX within subset in pixels
		2,		// numCharcodeRuns
		2		// numCharCodes
	};
	
	// 'A' = Saw 0
	// 'B' = Saw 90
	const CharcodeRun	charcodeRun[] PROGMEM = // {start, entryIndex}, ...
	{
		{0x0041, 0}, {0xFFFF, 2}
	};
	
	const uint16_t	glyphDataOffset[] PROGMEM =
	{				//+0x346 =
		0x0000, 0x356, 0x69C
	};

	const uint8_t	glyphData[] PROGMEM =
	{// 0x356
		0x20, 0x00, 0x00, 0x20, 0x20, 0x07, 0x08, 0xEE, 0x09, 0x06, 0x00, 0x08,
		0x09, 0x09, 0x01, 0x29, 0xC0, 0x6C, 0x06, 0x0A, 0x06, 0x02, 0x00, 0x00,
		0x06, 0x09, 0x0E, 0x08, 0xEC, 0x09, 0x05, 0x18, 0x41, 0x0B, 0x07, 0x04,
		0x4F, 0xFF, 0xFF, 0x82, 0x00, 0x04, 0x12, 0x28, 0x41, 0x50, 0x16, 0x06,
		0x09, 0x0C, 0x08, 0xF2, 0x09, 0x05, 0x80, 0xFF, 0x2F, 0x00, 0x69, 0xFF,
		0xD6, 0xFF, 0x7C, 0x30, 0x79, 0xC4, 0x03, 0xFF, 0xFD, 0x43, 0x02, 0x0B,
		0x09, 0x08, 0xF3, 0x09, 0x09, 0x0A, 0x01, 0x34, 0xFF, 0xFF, 0x74, 0x5D,
		0xFF, 0xD8, 0xFB, 0xFD, 0x04, 0xFF, 0xF7, 0xDA, 0xFF, 0x88, 0x05, 0x01,
		0x05, 0x08, 0x0A, 0x09, 0x05, 0x08, 0xF5, 0x09, 0x05, 0x03, 0x0A, 0x06,
		0x8C, 0xFF, 0xDF, 0xFF, 0xFF, 0xE2, 0x03, 0xFF, 0xF2, 0xFC, 0xE1, 0xE1,
		0xF4, 0xE6, 0xFF, 0x75, 0x2F, 0x2A, 0x16, 0x07, 0x00, 0x05, 0x09, 0x03,
		0x08, 0xF5, 0x09, 0x05, 0x1A, 0x23, 0x00, 0x26, 0xFF, 0xE6, 0xFF, 0xEC,
		0xE5, 0x04, 0xFF, 0xFF, 0xFE, 0x04, 0xFF, 0xFF, 0xEE, 0x03, 0xFF, 0xF0,
		0xD9, 0x8E, 0x52, 0x18, 0x06, 0x09, 0x08, 0x08, 0x09, 0x05, 0x87, 0xFF,
		0x25, 0x52, 0xFF, 0xDE, 0x0B, 0xFF, 0xFB, 0xFE, 0xFF, 0xEC, 0xDD, 0xE6,
		0x03, 0xFF, 0xF3, 0x84, 0x02, 0x0A, 0x08, 0x08, 0x07, 0x0C, 0xA3, 0xFF,
		0xF3, 0xCB, 0xFF, 0xFB, 0x0F, 0xFF, 0xF0, 0xFE, 0xED, 0xFE, 0x8A, 0x27,
		0x06, 0x09, 0x08, 0x09, 0x06, 0x0F, 0xB3, 0xFF, 0xF0, 0xFF, 0xF8, 0x10,
		0xFF, 0xF1, 0xF8, 0xFF, 0xFE, 0x23, 0x00, 0x09, 0x09, 0x08, 0x09, 0x08,
		0x0E, 0xB0, 0xFF, 0xEB, 0xF7, 0x04, 0xFF, 0xF6, 0xFE, 0xFF, 0xED, 0xDD,
		0xE3, 0xE3, 0xDD, 0xED, 0xFF, 0xFE, 0x04, 0xFF, 0xF3, 0xF6, 0xFF, 0xFB,
		0x4E, 0x06, 0x06, 0x0A, 0x06, 0x02, 0x0A, 0x9E, 0xFF, 0xEB, 0x04, 0xFF,
		0xFD, 0xFE, 0xFF, 0xE2, 0x06, 0xFF, 0xFD, 0xE2, 0xFF, 0xFE, 0x04, 0xFF,
		0xF4, 0xF5, 0xFF, 0xFF, 0x80, 0x0F, 0x03, 0x14, 0x27, 0x04, 0x7A, 0xFF,
		0xE3, 0x03, 0xFF, 0xF2, 0xFE, 0xFF, 0xE3, 0xFF, 0xAB, 0x4C, 0x2C, 0x2C,
		0x4C, 0xAB, 0xFF, 0xE3, 0xFF, 0xFE, 0x04, 0xFF, 0xF5, 0xF7, 0xD6, 0xFF,
		0x99, 0x15, 0x70, 0xFF, 0x89, 0xAD, 0xFF, 0xF4, 0x04, 0xFF, 0xF4, 0xE2,
		0xFF, 0x77, 0x0C, 0x00, 0x02, 0x02, 0x00, 0x0C, 0x77, 0xFF, 0xE2, 0x09,
		0xFF, 0xFE, 0x78, 0x4E, 0x03, 0xFF, 0xFF, 0xF3, 0x04, 0xFF, 0xF2, 0xEC,
		0xFF, 0xA9, 0x0B, 0x02, 0x4B, 0xA0, 0xA0, 0x4B, 0x02, 0x0C, 0xAA, 0xFF,
		0xEC, 0x03, 0xFF, 0xF4, 0xFE, 0xF8, 0xFF, 0x76, 0x60, 0x2A, 0x17, 0xEC,
		0xEA, 0xEE, 0xFF, 0xFE, 0x03, 0xFF, 0xFB, 0xDD, 0xFF, 0x4B, 0x00, 0x4B,
		0x04, 0xFF, 0xFB, 0x4B, 0x00, 0x4C, 0xFF, 0xDD, 0x03, 0xFF, 0xF6, 0xFE,
		0xE2, 0xFF, 0x3B, 0x00, 0x05, 0x01, 0x62, 0xFF, 0xDC, 0x05, 0xFF, 0xF2,
		0xE4, 0xFF, 0x2A, 0x03, 0xA0, 0xFF, 0xDC, 0xDC, 0xFF, 0xA0, 0x03, 0x2A,
		0xFF, 0xE4, 0x04, 0xFF, 0xF6, 0xF2, 0xFF, 0xED, 0x19, 0x06, 0x06, 0x19,
		0xED, 0xFF, 0xF2, 0x04, 0xFF, 0xF2, 0xE5, 0xFF, 0x28, 0x03, 0x9E, 0xFF,
		0xDB, 0xDB, 0xFF, 0x9E, 0x03, 0x28, 0xFF, 0xE5, 0x05, 0xFF, 0xF6, 0xDC,
		0xFF, 0x62, 0x01, 0x05, 0x00, 0x3B, 0xFF, 0xE2, 0xFE, 0x03, 0xFF, 0xFB,
		0xDD, 0xFF, 0x4A, 0x00, 0x4D, 0x04, 0xFF, 0xFB, 0x4D, 0x00, 0x4A, 0xFF,
		0xDD, 0x03, 0xFF, 0xF4, 0xFE, 0xFF, 0xEE, 0xEA, 0xEC, 0x17, 0x2A, 0x60,
		0x76, 0xFF, 0xF8, 0xFE, 0x03, 0xFF, 0xF2, 0xED, 0xFF, 0xAE, 0x0D, 0x03,
		0x4C, 0x9A, 0x9A, 0x4C, 0x02, 0x0D, 0xAE, 0xFF, 0xED, 0x04, 0xFF, 0xFF,
		0xF3, 0x03, 0xFF, 0xFE, 0x4E, 0x78, 0x09, 0xFF, 0xF4, 0xE2, 0xFF, 0x7D,
		0x0D, 0x00, 0x02, 0x02, 0x00, 0x0D, 0x7D, 0xFF, 0xE2, 0x04, 0xFF, 0xF5,
		0xF3, 0xFF, 0xAD, 0x89, 0xFF, 0x70, 0x15, 0x99, 0xFF, 0xD6, 0xF7, 0x04,
		0xFF, 0xF2, 0xFE, 0xFF, 0xE3, 0xFF, 0xAE, 0x4A, 0x28, 0x28, 0x4A, 0xAE,
		0xFF, 0xE3, 0xFF, 0xFE, 0x03, 0xFF, 0xF4, 0xE3, 0xFF, 0x79, 0x04, 0x27,
		0x14, 0x03, 0x0F, 0x7F, 0xFF, 0xFF, 0xF5, 0x04, 0xFF, 0xFD, 0xFE, 0xFF,
		0xE2, 0x06, 0xFF, 0xFD, 0xE2, 0xFF, 0xFE, 0x04, 0xFF, 0xF3, 0xEB, 0xFF,
		0x9E, 0x0A, 0x02, 0x06, 0x0A, 0x06, 0x06, 0x4E, 0xF7, 0xFF, 0xF6, 0x04,
		0xFF, 0xF6, 0xFE, 0xFF, 0xED, 0xDD, 0xE5, 0xE5, 0xDD, 0xED, 0xFF, 0xFE,
		0x04, 0xFF, 0xF1, 0xF7, 0xEB, 0xFF, 0xB0, 0x0E, 0x08, 0x09, 0x08, 0x09,
		0x09, 0x00, 0x23, 0xFD, 0xFF, 0xF8, 0x10, 0xFF, 0xF0, 0xF8, 0xFF, 0xF0,
		0xFF, 0xB3, 0x0F, 0x06, 0x09, 0x08, 0x09, 0x06, 0x27, 0x8A, 0xFE, 0xED,
		0xFE, 0x0F, 0xFF, 0xF3, 0xFB, 0xFF, 0xCB, 0xF2, 0xFF, 0xA3, 0x0C, 0x07,
		0x08, 0x08, 0x0A, 0x02, 0x84, 0x03, 0xFF, 0xFB, 0xE6, 0xDD, 0xEC, 0xFF,
		0xFE, 0x0B, 0xFF, 0xF0, 0xDE, 0xFF, 0x51, 0x25, 0xFF, 0x87, 0x05, 0x09,
		0x08, 0x08, 0x09, 0x06, 0x18, 0x51, 0x8E, 0xD7, 0x03, 0xFF, 0xFF, 0xEE,
		0x04, 0xFF, 0xFF, 0xFE, 0x04, 0xFF, 0xF5, 0xE5, 0xEC, 0xFF, 0xE6, 0xFF,
		0x25, 0x00, 0x23, 0x19, 0x05, 0x09, 0x03, 0x08, 0xF2, 0x09, 0x05, 0x00,
		0x07, 0x16, 0x2A, 0x2F, 0x75, 0xFF, 0xE6, 0xF4, 0xE1, 0xE1, 0xFC, 0x03,
		0xFF, 0xF5, 0xE2, 0xFF, 0xFF, 0xDF, 0xFF, 0x8C, 0x06, 0x0A, 0x03, 0x05,
		0x09, 0x05, 0x08, 0xF7, 0x09, 0x0A, 0x08, 0x05, 0x01, 0x05, 0x88, 0xFF,
		0xDA, 0x04, 0xFF, 0xF3, 0xFD, 0xFB, 0xD8, 0xFF, 0x5D, 0x74, 0xFF, 0xFF,
		0x34, 0x01, 0x0A, 0x09, 0x09, 0x09, 0x08, 0xFD, 0x0B, 0x02, 0x43, 0x03,
		0xFF, 0xF2, 0xC4, 0x79, 0x2F, 0x7C, 0xFF, 0xD6, 0xFF, 0x69, 0x00, 0x2F,
		0xFF, 0x80, 0x05, 0x09, 0x0C, 0x08, 0xEC, 0x09, 0x06, 0x16, 0x50, 0x41,
		0x28, 0x12, 0x04, 0x00, 0x82, 0xFF, 0xFF, 0x4F, 0x04, 0x07, 0x0B, 0x41,
		0x18, 0x04, 0x09, 0x0D, 0x08, 0xEE, 0x09, 0x06, 0x00, 0x00, 0x02, 0x06,
		0x0A, 0x06, 0x6C, 0xC0, 0x29, 0x01, 0x09, 0x09, 0x08, 0x00, 0x06, 0x09,
		0x07, 0x08,

	// 0x346
		0x20, 0x00, 0x00, 0x20, 0x20, 0x09, 0x08, 0xF1, 0x0A, 0x03, 0x15, 0x78,
		0x2A, 0x05, 0x06, 0x01, 0x17, 0x4E, 0x70, 0x14, 0x06, 0x09, 0x09, 0x0E,
		0x08, 0xEA, 0x09, 0x0A, 0x09, 0x09, 0x06, 0x0F, 0x99, 0xFF, 0x60, 0x00,
		0x19, 0x62, 0xEC, 0xFF, 0xFF, 0x27, 0x02, 0x08, 0x06, 0x07, 0x09, 0x09,
		0x09, 0x08, 0xE8, 0x09, 0x06, 0x02, 0x06, 0x09, 0x06, 0x80, 0xFF, 0xFF,
		0x76, 0x3B, 0xED, 0xFF, 0xEA, 0xFF, 0x89, 0x04, 0x0A, 0x0E, 0x0F, 0x0C,
		0x05, 0x05, 0x09, 0x07, 0x08, 0xF7, 0x09, 0x05, 0x18, 0x84, 0x27, 0x00,
		0x4E, 0xFF, 0xD6, 0x04, 0xFF, 0xF3, 0xDC, 0xEE, 0xFF, 0xAD, 0x79, 0x9E,
		0xB0, 0xB3, 0xA3, 0x87, 0x19, 0x05, 0x09, 0x06, 0x08, 0xF0, 0x0A, 0x00,
		0x52, 0xFF, 0x8A, 0x23, 0xFB, 0xFF, 0xF7, 0xFF, 0xF8, 0xE2, 0xF2, 0xFF,
		0xFF, 0xF3, 0x07, 0xFF, 0xFD, 0x23, 0x03, 0x09, 0x07, 0x08, 0xE7, 0x07,
		0x8E, 0xFF, 0xFE, 0xFE, 0xFF, 0xF5, 0xFF, 0xFF, 0xFE, 0xFE, 0xFF, 0xFF,
		0xFE, 0xFF, 0xF3, 0xE3, 0xEB, 0xEB, 0xF0, 0xF2, 0x25, 0x00, 0x0A, 0x0A,
		0x04, 0x08, 0xF7, 0x09, 0x0B, 0x05, 0x16, 0xD9, 0xFF, 0xED, 0xFF, 0xF6,
		0x0C, 0xFF, 0xED, 0xF7, 0xFF, 0xCB, 0x51, 0x25, 0x06, 0x01, 0x09, 0x09,
		0x08, 0x09, 0x06, 0x02, 0x01, 0x2A, 0xFF, 0xE6, 0xFE, 0xF8, 0x0E, 0xFF,
		0xFF, 0xF8, 0x03, 0xFF, 0xF4, 0x8C, 0x34, 0x05, 0x04, 0x09, 0x06, 0x16,
		0x43, 0x05, 0x2F, 0xFF, 0xDD, 0x11, 0xFF, 0xF1, 0xFB, 0xDE, 0xE6, 0xFF,
		0xFF, 0x80, 0x18, 0x06, 0x00, 0x50, 0xFF, 0x88, 0x75, 0xFF, 0xEC, 0x04,
		0xFF, 0xF6, 0xFE, 0xFF, 0xEC, 0xDD, 0xE4, 0xE5, 0xDD, 0xED, 0xFF, 0xFE,
		0x06, 0xFF, 0xF9, 0xDF, 0xFF, 0xFF, 0x41, 0x00, 0x00, 0x41, 0x03, 0xFF,
		0xFF, 0xEE, 0x04, 0xFF, 0xFD, 0xFE, 0xFF, 0xE2, 0x06, 0xFF, 0xFD, 0xE2,
		0xFF, 0xFE, 0x04, 0xFF, 0xE3, 0xEC, 0xFF, 0x74, 0x2F, 0x0B, 0x08, 0x02,
		0x28, 0xFF, 0xDA, 0xE6, 0xFF, 0xFE, 0xFF, 0xFF, 0xFE, 0xFF, 0xE3, 0xFF,
		0xAA, 0x4C, 0x2A, 0x28, 0x4A, 0xAE, 0xFF, 0xE3, 0xFF, 0xFE, 0x03, 0xFF,
		0xF5, 0xE5, 0xFF, 0x5D, 0x00, 0x07, 0x09, 0x06, 0x12, 0xC4, 0xFF, 0xF4,
		0x05, 0xFF, 0xF4, 0xE2, 0xFF, 0x77, 0x0C, 0x00, 0x03, 0x03, 0x00, 0x0D,
		0x7D, 0xFF, 0xE2, 0x05, 0xFF, 0xF6, 0xE2, 0xFF, 0x69, 0x04, 0x09, 0x0A,
		0x04, 0x79, 0xFF, 0xE1, 0x04, 0xFF, 0xF2, 0xED, 0xFF, 0xAB, 0x0C, 0x02,
		0x4B, 0xA0, 0x9E, 0x4D, 0x02, 0x0D, 0xAE, 0xFF, 0xED, 0x05, 0xFF, 0xF7,
		0xD8, 0xFF, 0x4F, 0x01, 0x06, 0x00, 0x30, 0xFF, 0xE1, 0x04, 0xFF, 0xFB,
		0xDD, 0xFF, 0x4C, 0x00, 0x4B, 0x04, 0xFF, 0xFB, 0x4C, 0x00, 0x4A, 0xFF,
		0xDD, 0x05, 0xFF, 0xF6, 0xFB, 0xD6, 0xFF, 0x29, 0x6C, 0x82, 0x7C, 0xFF,
		0xFC, 0xFE, 0x03, 0xFF, 0xF2, 0xE3, 0xFF, 0x2C, 0x02, 0xA0, 0xFF, 0xDC,
		0xDB, 0xFF, 0x9A, 0x02, 0x28, 0xFF, 0xE5, 0x05, 0xFF, 0xF8, 0xFD, 0xFF,
		0xFF, 0xC0, 0xC0, 0xFF, 0xFF, 0xFD, 0x05, 0xFF, 0xF2, 0xE3, 0xFF, 0x2C,
		0x02, 0xA0, 0xFF, 0xDC, 0xDB, 0xFF, 0x9A, 0x02, 0x28, 0xFF, 0xE5, 0x03,
		0xFF, 0xF6, 0xFE, 0xFC, 0xFF, 0x7C, 0x82, 0x6C, 0x29, 0xFF, 0xD6, 0xFB,
		0x05, 0xFF, 0xFB, 0xDD, 0xFF, 0x4C, 0x00, 0x4B, 0x04, 0xFF, 0xFB, 0x4C,
		0x00, 0x4A, 0xFF, 0xDD, 0x04, 0xFF, 0xF7, 0xE1, 0xFF, 0x2F, 0x00, 0x06,
		0x01, 0x4F, 0xFF, 0xD8, 0x05, 0xFF, 0xF2, 0xED, 0xFF, 0xAB, 0x0C, 0x02,
		0x4B, 0xA0, 0x9E, 0x4D, 0x03, 0x0D, 0xAE, 0xFF, 0xED, 0x04, 0xFF, 0xF6,
		0xE1, 0xFF, 0x79, 0x04, 0x0A, 0x09, 0x04, 0x69, 0xFF, 0xE2, 0x05, 0xFF,
		0xF4, 0xE2, 0xFF, 0x77, 0x0B, 0x00, 0x03, 0x03, 0x00, 0x0D, 0x7D, 0xFF,
		0xE2, 0x05, 0xFF, 0xF5, 0xF4, 0xFF, 0xC4, 0x12, 0x06, 0x09, 0x07, 0x00,
		0x5D, 0xFF, 0xE5, 0x03, 0xFF, 0xE3, 0xFE, 0xFF, 0xE3, 0xFF, 0xA9, 0x4B,
		0x2A, 0x28, 0x4A, 0xAE, 0xFF, 0xE3, 0xFF, 0xFE, 0xFF, 0xFF, 0xFE, 0xFF,
		0xE6, 0xDA, 0xFF, 0x28, 0x02, 0x08, 0x0B, 0x2F, 0x74, 0xFF, 0xEC, 0x04,
		0xFF, 0xFD, 0xFE, 0xFF, 0xE2, 0x06, 0xFF, 0xFD, 0xE2, 0xFF, 0xFE, 0x04,
		0xFF, 0xFF, 0xEE, 0x03, 0xFF, 0xF9, 0x41, 0x00, 0x00, 0x41, 0xFF, 0xFF,
		0xDF, 0x06, 0xFF, 0xF6, 0xFE, 0xFF, 0xEC, 0xDD, 0xE4, 0xE5, 0xDD, 0xED,
		0xFF, 0xFE, 0x04, 0xFF, 0xF1, 0xEC, 0xFF, 0x75, 0x88, 0xFF, 0x50, 0x00,
		0x06, 0x18, 0x80, 0xFF, 0xFF, 0xE6, 0xDE, 0xFB, 0x11, 0xFF, 0xF4, 0xDD,
		0xFF, 0x2F, 0x05, 0x43, 0x16, 0x06, 0x09, 0x05, 0x05, 0x34, 0x8C, 0x03,
		0xFF, 0xFF, 0xF8, 0x0E, 0xFF, 0xED, 0xF8, 0xFE, 0xE6, 0xFF, 0x2A, 0x01,
		0x02, 0x06, 0x09, 0x08, 0x09, 0x09, 0x01, 0x06, 0x26, 0x52, 0xCB, 0xFF,
		0xF7, 0x0C, 0xFF, 0xF7, 0xF6, 0xFF, 0xED, 0xFF, 0xD7, 0x16, 0x05, 0x0B,
		0x09, 0x04, 0x08, 0xE7, 0x0A, 0x0A, 0x00, 0x25, 0xF3, 0xF0, 0xEB, 0xEB,
		0xE3, 0xF4, 0xFF, 0xFE, 0xFF, 0xFF, 0xFE, 0xFE, 0xFF, 0xFF, 0xF5, 0xFF,
		0xFD, 0xFE, 0xFF, 0x8E, 0x07, 0x07, 0x08, 0xFD, 0x09, 0x03, 0x23, 0x07,
		0xFF, 0xF0, 0xF3, 0xFF, 0xFF, 0xF2, 0xE2, 0xF8, 0xFF, 0xF7, 0xFF, 0xF7,
		0x23, 0x8A, 0xFF, 0x51, 0x00, 0x0A, 0x06, 0x08, 0xF3, 0x09, 0x05, 0x1A,
		0x87, 0xA3, 0xB3, 0xB0, 0x9E, 0x7A, 0xAD, 0xFF, 0xEE, 0xDC, 0x04, 0xFF,
		0xF7, 0xD6, 0xFF, 0x4E, 0x00, 0x27, 0x84, 0x18, 0x05, 0x09, 0x07, 0x08,
		0xE8, 0x09, 0x05, 0x05, 0x0C, 0x0F, 0x0E, 0x0A, 0x04, 0x89, 0xFF, 0xEA,
		0xFF, 0xED, 0x3B, 0x76, 0xFF, 0xFF, 0x7F, 0x06, 0x09, 0x06, 0x02, 0x06,
		0x09, 0x09, 0x08, 0xEA, 0x09, 0x09, 0x07, 0x06, 0x08, 0x02, 0x27, 0xFF,
		0xFF, 0xEC, 0x62, 0x19, 0x00, 0x60, 0xFF, 0x99, 0x0F, 0x06, 0x09, 0x09,
		0x0A, 0x09, 0x0D, 0x08, 0xF1, 0x09, 0x09, 0x06, 0x14, 0x70, 0x4E, 0x17,
		0x01, 0x06, 0x05, 0x2A, 0x78, 0x15, 0x03, 0x0A, 0x09, 0x08
};
	
	// Usage: Copy the 3 commented lines to your code, removing the comments.
	//#include "XFont.h"
	//XFont xFont;
	//#include "KM_Icons.h"
	
	// Leave the next 3 lines here, as is.
	DataStream_P	dataStream(glyphData, sizeof(glyphData));
	XFont16BitDataStream xFontDataStream(&xFont, &dataStream);
	XFont::Font font(&fontHeader, charcodeRun, glyphDataOffset, &xFontDataStream);
	
	// The display needs to be set before using xFont.  This only needs
	// to be done once at the beginning of the program.
	// Use xFont.SetDisplay(&display, &KM_Icons::font); to do this.
	// To change to this font anywhere after setting the display,
	// use: xFont.SetFont(&KM_Icons::font);
}

#endif // KM_Icons_h

